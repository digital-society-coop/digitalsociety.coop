---
layout: base-toc.njk
title: Digital Society | How we work
description: How we work
---
<h3 id="agile">Agile practices</h3>

<p>
  We subscribe to the <a href="https://agilemanifesto.org/principles.html">principles behind the Agile Manifesto</a> and this is reflected in how we work:
</p>

<ul>
  <li>We break down pieces of work into smaller deliverable chunks.</li>
  <li>We consider automated release and test pipelines a critical part of software we deliver, allowing us to release frequently and fearlessly.</li>
  <li>We communicate frequently, but not unnecessarily, both synchronously and asynchronously.</li>
  <li>We aim for flexible arrangements with clients in which we can always address the highest priority work in the face of changing requirements.</li>
</ul>

<h3 id="approach">Our approach</h3>

<p>
  We approach our engagements and deliverables with an iterative flow through the following phases:
</p>

<h4 id="discovery">Discovery</h4>

<p>
  The aim of this phase is to gain context of the work, assess the best approach and better predict what lies ahead.
  The typical artefacts produced at this stage would be:
</p>

<ul>
  <li>
    <strong>Decision logs:</strong>
    Our most frequently produced documentation, underpinning our <a href="#decision-making">technical decision making</a>.
  </li>
  <li>
    <strong>Technical documentation:</strong>
    Mostly applicable at the beginning of engagements, for projects that do not already have architecture diagrams or a documented data model.
    Artefacts are considered "living documents" and will be updated as the software evolves.
    In our typical work, documentation is informed by the Decision Logs.
  </li>
  <li>
    <strong>Risk register:</strong>
    As we gain understanding of a project, we may produce a technical risk register to manage technical debt and other technical risks.
    This is a living document, with the initial version produced at the beginning of an engagement.
    This supports conversations with clients about managing technical risks and prioritising their mitigation (or not, if the risk appetite is high).
  </li>
</ul>

<h4 id="delivery">Delivery</h4>

<p>
  In this phase we deliver the work agreed in the Discovery phase to the standards defined in our <a href="#dod">Definition of done</a>.
</p>

<p>
  While we take reasonable measures to manage uncertainty (e.g. by breaking down work and undertaking Discovery), our agile practices allow us to change course in the face of changing requirements, priorities, or uncovering "unknown unknowns".
</p>

<h4 id="reflection">Reflection and planning</h4>

<p>
  We demonstrate functionality and gather feedback continuously as we deliver work, however this final phase allows for a retrospective of the outcome and identifying process improvements.
</p>

<p>
  It is also when upcoming work can be prioritised and planned, kicking off the Discovery phase of the next iteration.
</p>

<h3 id="decision-making">Decision making</h3>

<p>
  Decisions are made daily about architecture, implementation, future direction, technology choices, etc.
  We believe that capturing these in a lightweight and standardised format has benefits, both to support better decisions and as a reference.
  For this we use Decision Logs, an iteration on <a href="https://www.ietf.org/standards/rfcs/">Requests for comment (RFCs)</a> and <a href="https://docs.aws.amazon.com/prescriptive-guidance/latest/architectural-decision-records/adr-process.html">Architectural decision records (ADRs)</a>.
  A decision log captures:
</p>

<ul>
  <li>
    <strong>Context:</strong>
    Why is the decision important?
    This sets out the criteria for the decision.
  </li>
  <li>
    <strong>Options:</strong>
    What are the options to decide between?
    This could range from architecture and technology choices to binary choices such as whether something needs to be done or not.
    This section records the evaluation of the available options against the criteria defined in "Context".
  </li>
  <li>
    <strong>Decision:</strong>
    Which option was chosen?
    This follows a discussion with the wider team or stakeholders to make the choice in light of the appraisal.
  </li>
</ul>

<h3 id="dod">Definition of done</h3>

<p>
  We consider work "done" when it:
</p>

<ul>
  <li>Satisfies the user or acceptance criteria defined.</li>
  <li>Passes quality assurance.</li>
  <li>Is documented, if applicable.</li>
  <li>Is deployed to all environments and released to users.</li>
</ul>

<h3 id="standards">Technical conventions</h3>

<p>
  We use standards, such as <a href="https://www.conventionalcommits.org/en/v1.0.0/">conventional commits</a> and <a href="https://conventionalcomments.org/">conventional comments</a> with our code.
  They enable clearer communication and automation.
</p>

<p>
  We believe in the usefulness of code linters and formatters and work with tools that do this automatically and verify adherence in CI pipelines.
</p>

<p>
  We have a preference to work with statically typed languages, as a means for quality assurance and documentation it provides.
</p>

